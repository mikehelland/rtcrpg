<!DOCTYPE html>
<html>
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
        <meta http-equiv="Pragma" content="no-cache" />
        <meta http-equiv="Expires" content="0" />
        <style>
            html {height:100%;
                padding:0px;
                margin:0px;
                }
            body {
                height:100%;
                padding:0px;
                margin:0px;
                /*background: rgba(0, 0, 0, 0) linear-gradient(135deg, rgb(249, 241, 232) 0%, rgb(205, 214, 227) 100%) repeat scroll 0% 0%;*/
                background: rgba(0, 0, 0, 0) linear-gradient(135deg, 
                rgb(90, 87, 83) 0%, rgb(50, 53, 56) 100%) repeat scroll 0% 0%;
                color:white;
                font-family: Arial, Helvetica, sans-serif;

            }
            #user-list video {
                width: 100%;
            }
            #user-list {
                    display: flex;
                    flex-wrap: wrap;
                }

            @media all and (orientation:landscape) {
                #user-list .user-panel {
                    position: relative;
                    width: 33%;
                }
    
            }

            @media all and (orientation:portrait) {
                #user-list .user-panel {
                    position: relative;
                    width: 50%;
                }
            }

            #join-area {
                margin:auto;
                font-size:30px;
                width: 60%;
                left: 25%;
            }

            #user-name-input ,#join-button {
                font-size:30px;
                width:100%;
                box-sizing: border-box;
            }
            #activity-log {
                font-size: 12px;
                font-family:'Courier New', Courier, monospace;
                display:none;
            }

            #disconnect-button {
                display:none;
                margin:auto;
                margin-bottom: 12px;
            }

            #view-controls {
                text-align: center;
                margin:auto;
                padding-top:18px;
                display:none;                
            }

            select, button {
                background-color: #404040;
                color:white;
                border: 1px solid white;
                border-radius: 3px;
                padding:5px;
                cursor:pointer
            }
            #fullscreen-button {
                width: 109px;
            }
            .user-name {
                position:absolute;
                background-color: #202020;
                color:#c0c0c0;
            }

            #game-show {
                background-size:cover;
                display: none;
                flex-grow: 1;
            }
            #game-show-host {
                text-align: center;
            }
            #game-show-host > #you {
                width: 22%;
                margin:15px auto;
            }
            #game-show-left {
                text-align: center;
                position:absolute;
                top:200px;
                left:10px;
                width: 20%;
            }
            #game-show-right {
                text-align: center;
                position:absolute;
                top:200px;
                right:10px;
                width: 20%;
            }
            #game-show video {
                width:100%;
            }

            #browser {
                display:none;
                flex-grow: 1;
            }
            #browser-browser {
                flex-grow: 1;
                display: flex;
                flex-direction: column;
            }
            #browser video {
                width:100%;
            }
            #browser-users {
                width:20%;
            }
            #browser iframe {
                flex-grow: 1;
            }
            #browser input {
                background-color: #404040;
                color:white;
            }

            #main-body {
                display:flex;
                flex-direction: column;
                padding:8px;
                height: 100%;
                box-sizing: border-box;
            }
            #standard {
                display: none;
                flex-grow: 1;
            }
        </style>
    </head>
    <body>
        <div id="main-body">
        <div id="join-area">
            <div>Name:</div> 
            <p><input id="user-name-input"></p>
            <button id="join-button">Join</button>    
        </div>

        

        <button id="disconnect-button">Disconnect</button>    


        <div id="standard">
            <div id="user-list">
                <div id="you" class="user-panel">
                    <div id="your-name" class="user-name"></div>
                </div>    
            </div>
        </div>

        <div id="game-show">
            <div id="game-show-host"></div>
            <div id="game-show-left"></div>
            <div id="game-show-right"></div>
        </div>

        <div id="browser">
            <div id="browser-users"></div>
            <div id="browser-browser">
                <input id="browser-input">
                <iframe></iframe>
            </div>
        </div>

        <div id="view-controls">
            <select id="view-select">
                <option>Standard</option>
                <option>Whiteboard</option>
                <option>Game Show</option>
                <option>Browser</option>
                <option>Music Studio</option>
            </select>    
            <button id="fullscreen-button">Fullscreen</button>    
        </div>

        </div>

        <div id="activity-log"></div>

        <script src="https://powerful-retreat-40064.herokuapp.com/socket.io/socket.io.js"></script>
        <script src="https://webrtc.github.io/adapter/adapter-latest.js"></script>
        <script src="omgrtc.js"></script>
        <script>

        var userNameInput = document.getElementById("user-name-input")    
        var userName = window.location.search.slice(1) 
        var roomName = "public"
        if (userName.indexOf(":") > -1) {
            roomName = userName.split(":")[0]
            userName = userName.split(":")[1]
        }

        userNameInput.value = userName

        var userListEl = document.getElementById('user-list')

        var rt = new OMGRealTime(userName)
        rt.acceptAllCalls = true

        var activityLog = document.getElementById("activity-log")
        var log = text => {
            console.log(text)
            activityLog.innerHTML = text + "<br>" + activityLog.innerHTML
            //activityLog.innerHTML += text + "<br>"
        }

        rt.onlog = (text) => {
            //log(text)
        }

        var you = document.getElementById("you")
        var controls = document.getElementById("view-controls")
        var joinButton = document.getElementById("join-button")
        var joinArea = document.getElementById("join-area")
        joinButton.onclick = () => {
            userName = userNameInput.value || (Math.round(Math.random() * 100000) + "")

            document.getElementById("your-name").innerHTML = userName

            rt.getUserMedia(video => {
                you.appendChild(video)
                rt.join(roomName, userName)
            })
            joinArea.style.display = "none"
            controls.style.display = "block"
            disconnectButton.style.display = "block"
            standard.style.display = "block"
        }

        var disconnectButton = document.getElementById("disconnect-button")
        disconnectButton.onclick = () => {
            //rt.closeConnections()
            //rt.stopMedia()
            rt.leave()
            setTimeout(() => {window.location = window.location}, 250)
        }


        rt.onjoined = (users) => {
            console.log("onjoined!!!!!!")
            disconnectButton.innerHTML = "Disconnect"
            for (var user in users) {
                if (!users[user].peerConnection) {
                    rt.callUser(user)
                }
            }
        }

        
        rt.onnewuser = (name, user) => {
            log(name + " joined")
            userEl = document.createElement("div")
            userEl.className = "user-panel"
            nameEl = document.createElement("div")
            nameEl.className = "user-name"
            nameEl.innerHTML = name
            videoEl = user.video
            userEl.appendChild(nameEl)
            userEl.appendChild(videoEl)
            userListEl.appendChild(userEl)
            user.div = userEl
        }
        
        rt.onuserleft = (name, user) => {
            log(name + " left")
            userListEl.removeChild(user.div)
        }

        rt.onuserdisconnected = (name, user) => {
            if (user.disconnected && user.peerConnection.connectionState !== "connected") {
                user.div.style.display = "none"
            }
        }
        rt.onuserreconnected = (name, user) => {
            user.div.style.display = "block"
        }
        
        rt.ondisconnect = () => {
            //connectedStatusEl.innerHTML = "not connected"
            console.log("disconnected")
            disconnectButton.innerHTML = "Disconnect."
            //disconnectButton.style.display = "none"
            //joinArea.style.display = "block"
        };

        var fullscreen = false
        document.getElementById("fullscreen-button").onclick = (e) => {
            if (fullscreen) {
                document.exitFullscreen();
            }
            else {
                document.body.requestFullscreen();
            }
            fullscreen = !fullscreen
        }

        var clearView = () => {
            userListEl.innerHTML = ""
            gameShow.style.display = "none"
            standard.style.display = "none"
            browser.div.style.display = "none"
            
        }
        var standard = document.getElementById("standard")
        var setStandardView = () => {
            clearView()
            standard.style.display = "block"
            userListEl.appendChild(you)
            for (var user in rt.remoteUsers) {
                userListEl.appendChild(rt.remoteUsers[user].div)
            }
        }
        var gameShow = document.getElementById("game-show")
        var setGameShowView = () => {
            clearView()
            gameShow.style.display = "block"
            gameShow.style.backgroundImage = "url(img/gameshow.jpg)"
            var hostPanel = document.getElementById("game-show-host")
            var leftPanel = document.getElementById("game-show-left")
            var rightPanel = document.getElementById("game-show-right")
            hostPanel.appendChild(you)
            var side = leftPanel
            for (var user in rt.remoteUsers) {
                side.appendChild(rt.remoteUsers[user].div)
                //side = side === leftPanel ? rightPanel : leftPanel
            }
        }

        var browser = {
            div: document.getElementById("browser"),
            userList: document.getElementById("browser-users"),
            input: document.getElementById('browser-input')
        }
        var setBrowserView = () => {
            clearView()
            browser.div.style.display = "flex"
            browser.userList.appendChild(you)
            browser.iframe = browser.div.getElementsByTagName("iframe")[0]
            browser.iframe.src = "https://mikehelland.com"
            for (var user in rt.remoteUsers) {
                browser.userList.appendChild(rt.remoteUsers[user].div)
            }
        }
        browser.input.onkeypress = e => {
            if (e.keyCode === 13) {
                var videoId = browser.getId(browser.input.value)
                if (videoId) {
                    browser.iframe.src = "https:////www.youtube.com/embed/" + videoId
                }
                else {
                    browser.iframe.src = browser.input.value
                }
            }
        }
        browser.getId = (url) => {
            const regExp = /^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/;
            const match = url.match(regExp);

            return (match && match[2].length === 11)
            ? match[2]
            : null;
        }

        var test = () => {
            joinArea.style.display = "none"
            controls.style.display = "block"
            disconnectButton.style.display = "block"
        }

        document.getElementById("view-select").onchange = e => {
            if (e.target.value === "Standard") {
                setStandardView()
            }
            if (e.target.value === "Browser") {
                setBrowserView()
            }
            if (e.target.value === "Game Show") {
                setGameShowView()
            }
            if (e.target.value === "Whiteboard") {
                setStandardView()
            }
        }
        </script>
    </body>
</html>