<!DOCTYPE html>
<html>
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <style>
            body {
                /*background: rgba(0, 0, 0, 0) linear-gradient(135deg, rgb(249, 241, 232) 0%, rgb(205, 214, 227) 100%) repeat scroll 0% 0%;*/
                background: rgba(0, 0, 0, 0) linear-gradient(135deg, 
                rgb(90, 87, 83) 0%, rgb(50, 53, 56) 100%) repeat scroll 0% 0%;
                color:white;
                box-sizing: border-box;
                font-family: Arial, Helvetica, sans-serif;

            }
            video {
                width: 100%;;
            }
            #user-list {
                    display: flex;
                    flex-wrap: wrap;
                }

            @media all and (orientation:landscape) {
                .user-panel {
                    position: relative;
                    width: 33%;
                }
    
            }

            @media all and (orientation:portrait) {
                .user-panel {
                    position: relative;
                    width: 50%;
                }
            }

            #join-area {
                margin:auto;
                font-size:30px;
                width: 60%;
                left: 25%;
            }

            #user-name-input ,#join-button {
                font-size:30px;
                width:100%;
                box-sizing: border-box;
            }
            #activity-log {
                font-size: 12px;
                font-family:'Courier New', Courier, monospace;
            }

            #disconnect-button {
                display:none;
                margin:auto;
                background-color: #404040;
                color:white;
                border: 1px solid white;
                border-radius: 3px;
                padding:5px;
                cursor:pointer
            }
        </style>
    </head>
    <body>
        <div id="join-area">
            <p>Name:</p> 
            <p><input id="user-name-input"></p>
            <button id="join-button">Join</button>    
        </div>
        <button id="disconnect-button">Disconnect</button>    


        <div id="user-list">
            <div id="you" class="user-panel">
                <div id="your-name"></div>
            </div>
    
        </div>
        <div id="activity-log"></div>

        <script src="https://powerful-retreat-40064.herokuapp.com/socket.io/socket.io.js"></script>
        <script src="https://webrtc.github.io/adapter/adapter-latest.js"></script>
        <script src="omgrtc.js"></script>
        <script>

        var userNameInput = document.getElementById("user-name-input")    
        var userName = window.location.search.slice(1) 
        var roomName = "public"
        if (userName.indexOf("/") > -1) {
            roomName = userName.split("/")[0]
            userName = userName.split("/")[1]
        }

        userNameInput.value = userName

        var userListEl = document.getElementById('user-list')

        var rt = new OMGRealTime(userName)
        rt.acceptAllCalls = true

        var activityLog = document.getElementById("activity-log")
        var log = text => {
            activityLog.innerHTML = text + "<br>" + activityLog.innerHTML
            //activityLog.innerHTML += text + "<br>"
        }

        rt.onlog = (text) => {
            //log(text)
        }


        var joinButton = document.getElementById("join-button")
        var joinArea = document.getElementById("join-area")
        joinButton.onclick = () => {
            userName = userNameInput.value || (Math.round(Math.random() * 100000) + "")

            document.getElementById("your-name").innerHTML = userName

            rt.getUserMedia(video => {
                you.appendChild(video)
                rt.join(roomName, userName)
            })
            joinArea.style.display = "none"
            disconnectButton.style.display = "block"
        }

        var disconnectButton = document.getElementById("disconnect-button")
        disconnectButton.onclick = () => {
            //rt.closeConnections()
            //rt.stopMedia()
            rt.leave()
            setTimeout(() => {window.location = window.location}, 250)
        }


        rt.onjoined = (users) => {
            console.log("onjoined!!!!!!")
            disconnectButton.innerHTML = "Disconnect"
            for (var user in users) {
                if (!users[user].peerConnection) {
                    rt.callUser(user)
                }
            }
        }

        
        rt.onNewUser = (name, user) => {
            log(name + " joined")
            userEl = document.createElement("div")
            userEl.className = "user-panel"
            nameEl = document.createElement("div")
            nameEl.className = "user-name"
            nameEl.innerHTML = name
            videoEl = user.video
            userEl.appendChild(nameEl)
            userEl.appendChild(videoEl)
            userListEl.appendChild(userEl)
            user.div = userEl
        }
        
        rt.onRemoveUser = (name, user) => {
            log(name + " disconnected")
            userListEl.removeChild(user.div)
        }
        
        rt.ondisconnect = () => {
            //connectedStatusEl.innerHTML = "not connected"
            log("disconnected")
            disconnectButton.innerHTML = "Disconnect."
            //disconnectButton.style.display = "none"
            //joinArea.style.display = "block"
        };


        </script>
    </body>
</html>